Being IT professionals, my parents badgered me to take coding classes for years until I finally gave in and took AP Computer Science Principles (APCSP). The central mantra of APCSP was "reduce complexity," and each chapter in the course seemed to fit the narrative of this ideal objective: loops and functions reduced repeating code into one block; if statements filtered information into various categories, specifying their value; lists offered multi-item storage to minimize variable overuse. Each new programming structure furthered the capabilities of the others, allowing me to code increasingly intricate algorithms in ways that were still easy to understand and "reduced the complexity" of both the programs and the problems they were trying to solve.
Beyond its capacity to make life easier, coding nourished my creativity, enabling me to delve into my projects with their trials and tribulations; however, through each difficulty, I discerned a new skill. Creating a recipe generator program not only forced me to learn how to employ and import text files to store and display the recipes, but it also pushed the limits of my understanding of string functions as I utilized them in new ways. Furthermore, the collaborative nature of the project illustrated to me how to delegate code sections and different steps in the programming process that play to the strengths of each member while maintaining a manageable workload. 
Ultimately, before Data Science, there was my first love-Computer Science, an environment that thrives on problem-solving, ingenuity, and simplicity.
